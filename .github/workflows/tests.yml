name: Unit Tests & Coverage

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  tests:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    strategy:
      max-parallel: 2
      matrix:
        os: [ubuntu-latest]
        # In future we can add [macos-latest, windows-latest]
        python-version: [3.9, '3.10']
        folder: ["client"]
    env:
      SERV_KEY: test
      DB_NAME: github_actions
      DB_SCHEMA: public
      DB_USER: root
      DB_PASSWORD: root
      DB_PORT: 5432
      DB_HOST: localhost
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: ${{ env.DB_USER }}
          POSTGRES_PASSWORD: ${{ env.DB_PASSWORD }}
          POSTGRES_DB: ${{ env.DB_NAME }}
          POSTGRES_HOST_AUTH_METHOD: trust
        ports:
          - ${{ DB_PORT }}:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox
      - name: Setup API
        run: |
          sudo apt-get install libpq-dev -y
          cd api_server/
          pip install -r requirements.txt
          python manage.py makemigrations core
          python manage.py migrate
      - name: Start API
        if: matrix.folder == 'client'
        run: |
          cd api_server/
          python manage.py runserver 0.0.0.0:8000 &
      - name: Test using tox environment
        shell: bash
        env:
          FOLDER: ${{ matrix.folder }}
        run: |
          pver=${{ matrix.python-version }}
          tox -epy${pver/./}
      - name: Coverage check
        env:
          FOLDER: ${{ matrix.folder }}
        run: tox -ecoverage
